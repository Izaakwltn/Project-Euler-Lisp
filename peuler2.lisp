;;;;-------------------------------------------------------------------------
;;;;Project Euler # 2
;;;;-------------------------------------------------------------------------
;;;Each new term in the Fibonacci sequence is generated by adding 
;;;the previous two terms. 
;;;By starting with 1 and 2, the first 10 terms will be:

;;;1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

;;;By considering the terms in the Fibonacci sequence 
;;;whose values do not exceed four million, find the sum of the even-valued terms.
;;;;-------------------------------------------------------------------------

(defun fib (n)
       (cond ((equal n 0) 1)
             ((equal n 1) 1)
             (t (+ (fib (- n 1))
                   (fib (- n 2))))))

(defun fib-climb (n max)
  (cond ((> (fib n) max) nil)
        (t (cons (fib n) (fib-climb (+ n 1) max)))))

(defun even-fib-squash (n max)
  (reduce #'+ (remove-if-not #'(lambda (num)
                                      (equal (mod num 2) 0)) (fib-climb n max))))

(defun peuler2 ()
    (even-fib-squash 0 4000000))
;;;;-------------------------------------------------------------------------